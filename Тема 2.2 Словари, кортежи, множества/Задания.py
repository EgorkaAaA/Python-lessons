# Словари
# Задание №1
# Объединить два словаря.
dictionary_1 = {1: 'a', 2: 'b'}
dictionary_2 = {3: 'c', 4: 'd'}
dictionary_out = {1: 'a', 2: 'b', 3: 'c', 4: 'd'}

# Задание №2
# Написать метод, который создает словарь, в котором ключами будут числа между теми, которые передали в метод,
# а значениями эти же числа, возведенные в квадрат.
create_dict(1,10)
dictionary_out = {1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81, 10: 100}

# Задание №3
# Необходимо создать словарь из двух списков одинаковой длины таким образом, чтобы элементы первого списка были ключами,
# а элементы второго — соответственно значениями нашего словаря.
list_1 = [1, 2, 3, 4]
list_2 = ['a','b', 'c', 'd']
dictionary_out = {1: 'a', 2: 'b', 3: 'c', 4: 'd'}

# Задание №4
# Дан словарь с числовыми значениями. Необходимо их все сложить.
dictionary = {'1': 200, '2': 300, '3': -150, '4': 3517}
sum = 3867

dictionary_out = {1: 'a', 2: 'b', 3: 'c', 4: 'd'}

# Задание №5
# Создать словарь из строки, ключами должны быть буквы строки, а значениями их количество в строке
text = 'text in my txet'
dictionary_out = {'t': 4, 'e': 2, 'x': 2, ' ': 3, 'i': 1, 'n': 1, 'm': 1, 'y': 1}

# Кортежи
# Задание №1
# Отсортировать кортеж по возрастанию
dictionary_1 = {1: 'a', 2: 'b'}
dictionary_2 = {3: 'c', 4: 'd'}
dictionary_out = {1: 'a', 2: 'b', 3: 'c', 4: 'd'}

# Задание №2
# Функция slicer() на вход принимает кортеж и случайный элемент.
# Требуется вернуть новый кортеж, начинающийся с первого появления элемента в нем и заканчивающийся вторым его появлением включительно.
# Если элемента нет вовсе – вернуть пустой кортеж.
# Если элемент встречается только один раз, то вернуть кортеж, который начинается с него и идет до конца исходного.
slicer((1,2,3,4,1,3,4,5), 1)
tuple_out = (1, 2, 3, 4, 1)

# Задание №3
# Необходимо создать кортеж из уникальных чисел из спика
list_in = [1, 2, 3, 4, 4, 4, 5, 6, 7, 7, 8, 9, 0 ,0 ,0 ,0]
tuple_out = (1, 2, 3, 4, 5, 6, 7, 8, 9, 0)

# Задание №4
# Создать метод, который будет получать на вход кортеж со школьниками и оценку,
# необходимо вывести кортеж с именами всех школьников у которых оценка выше заданной
tuple_in = (
  ('Егор', 2.2),
  ('Аня', 3.6),
  ('Миша', 3.5),
  ('Женя', 4.2),
  ('Вася', 5.0),
  ('Петя', 4.0),
  ('Володя', 4.3),
  ('Евгений', 4.6),
)
tuple_out = ('Аня', 'Миша', 'Женя', 'Вася', 'Петя', 'Володя', 'Евгений')

# Множества
# Задание №1
# Создать метод, который получает списки и превращает их в множество и получает его мощность
set_and_power(
    [1, 2, 3, 4],
    [2, 5, 6, 7, 4]
)

# Задание №2
# Необходимо получить симметричную разницу 3 множест
set_1 = {3, 4, 5, 6, 20}
set_2 = {4, 6, 7, 8, 9}
set_3 = {5, 3, 8, 1}

# Задание №3
# Необходимо написать метод, который проверяет является ли 1 множество из переданных супермножеством
super_set({1, 2, 3, 4, 5, 6, 7, 8}, {1, 2, 3}, {9, 0})
# Результат:
# Множество:  {1, 2, 3, 4, 5, 6, 7, 8}  является супер множеством для:  {1, 2, 3}
# Множество:  {1, 2, 3, 4, 5, 6, 7, 8}  не является супер множеством для:  {0, 9}

# Задание №4
# Предоставлен список натуральных чисел.
# Требуется сформировать из них множество.
# Если какое-либо число повторяется, то преобразовать его в строку по образцу:
# например, если число 4 повторяется 3 раза, то в множестве будет следующая запись: само число 4, строка «44», строка «444».

find_repeat([1, 2, 4, 4, 4])
set_out = {1, 2, '444', 4, '44'}